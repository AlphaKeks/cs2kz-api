# Tokio configuration.
[runtime]
# The amount of worker threads to spawn.
#
# This is the main thread pool used for scheduling tasks.
#
# A value of `0` will cause the amount to be chosen by tokio.
worker-threads = 0

# The maximum amount of blocking threads to spawn.
#
# This thread pool is used for occasional blocking work that cannot be
# performed asynchronously.
#
# A value of `0` will cause the amount to be chosen by tokio.
max-blocking-threads = 0

# The stack size (in bytes) for any spawned threads.
#
# NOTE: the actual value might be higher, if the platform defines a minimum
# higher than your specified value.
thread-stack-size = 2097152 # 2 MiB

# Tokio tracing configuration.
#
# NOTE: by default tokio does not emit trace data! You must compile with
# `--cfg tokio_unstable` in your `RUSTFLAGS` and `--features console` in order
# to enable tokio traces + tokio-console.
[runtime.metrics]
# Record task poll times.
#
# This can be useful when debugging using tokio-console, but is disabled by
# default as it adds significant overhead.
record-poll-counts = false

[tracing]
# Enable tracing.
#
# This should generally be enabled, as it's pretty much impossible to tell
# what's going on without it.
#
# This option only exists to forcefully disable it (e.g. for benchmarking).
enable = true

# The default global filter.
#
# This is applied to all layers by default (except for tokio-console), but they
# can do their own filtering on top of it.
#
# For a syntax reference, please see the `EnvFilter` documentation:
# https://docs.rs/tracing-subscriber/0.3/tracing_subscriber/filter/struct.EnvFilter.html#directives
filter = "cs2kz_api=trace,cs2kz_api::runtime=info,sqlx=debug,warn"

[tracing.stderr]
# Write trace data to stderr.
enable = true

# Emit ANSI escape codes for formatting (colors, italics, etc.).
ansi = true

# Additional filter directives for this layer.
filter = ""

# Traces are always written to files, so there's no `enable` option here.
[tracing.files]
# Path to the directory to store logs in.
#
# Should be `/var/log/cs2kz-api` when running in Docker.
path = "./logs"

# Additional filter directives for this layer.
filter = ""

# tokio-console is enabled by the `console` feature flag, so there's no
# `enable` option here.
[tracing.console]
# Address to listen for client connections on.
#
# This can also be a path to a Unix Domain Socket.
#
# This is what the tokio-console CLI connects to.
server-addr = "127.0.0.1:6669"

# Database connection options.
[database]
# Minimum amount of pool connections to open right away.
min-connections = 0

# Maximum amount of pool connections to open right away.
#
# A value of `0` will cause the amount to be chosen dynamically based on how
# many threads are available.
max-connections = 0

[http]
# IP address to listen on.
#
# Should be `0.0.0.0` when running in Docker.
listen-addr = "127.0.0.1"

# Port to listen on.
listen-port = 42069

# The URL that other services can use to reach the API.
#
# This is used for OpenID authentication among other things.
public-url = "http://127.0.0.1:42069"

# The value to use for `Domain` fields in HTTP cookies.
cookie-domain = "127.0.0.1"

[secrets]
# Key to use for encoding/decoding JWTs.
jwt-key = "csgo-kz-is-dead-boys"

[steam]
# Steam WebAPI key.
#
# Get yours here: https://steamcommunity.com/dev/apikey
api-key = ""

# Path to use for storing downloaded workshop assets.
#
# Should be `/var/lib/cs2kz-api/workshop` when running in Docker.
workshop-artifacts-path = "./workshop"

# Path to the `DepotDownloader` executable.
#
# The default value assumes you have it installed and in your `$PATH`, but you
# can use an absolute path as well if you have it in some custom location.
#
# Should be `/usr/bin/DepotDownloader` when running in Docker.
depot-downloader-path = "DepotDownloader"
